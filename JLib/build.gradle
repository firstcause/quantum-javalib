/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'sjm' at '8/3/15 12:18 AM' with Gradle 2.5
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.5/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

group = 'com.denizensoft.jlib'
version = '1.0.0'

buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
	}
}

artifactory {
	contextUrl = 'http://huxley.quarknet:8081/artifactory'

	publish {

		repository {
			repoKey = 'libs-release-local'
			username = 'sjm'
			password = 'sjm.rds.666'
		}

		defaults {
			// This closure defines defaults for all 'artifactoryPublish' tasks of all projects the plugin is applied to
			// Optional list of publications (names or objects) to publish.
			//
			publications ('mavenJava')

			// properties = ['qa.level': 'basic', 'q.os': 'win32, deb, osx']  //Optional map of properties to attach to all published artifacts
			/*
				The properties closure in the "defaults" task uses the following syntax:
				properties {
					publicationName 'group:module:version:classifier@type', key1:'value1', key2:'value2', ...
				}
				publicationName: A valid name for a publication of the project. You can use all to apply the properties to all publications.
				group:module:version:classifier@type: A filter that specifies the artifacts to which properties should be attached. 
				The filter may contain wildcards: * for all characters or ? for a single character.
				key:'value': A list of key/value properties that will be attached to to the published artifacts matching the filter. 
			*/
			properties {
				//Optional closure to attach properties to artifacts based on a list of artifact patterns per project publication
				mavenJava '*:*:*:*@*', platform: 'java-jdk'

				//The property platform=linux,win64 will be set on all artifacts in foo publication
				//The property key1=val1 will be set on all artifacts part of the mavenJava publication and with group org.jfrog
				//mavenJava 'org.jfrog:*:*:*@*', key1: 'val1'

				//The properties key2 and key3 will be set on all published artifacts (all publications) with group:artifact:version 
				//equal to org.jfrog:shared:1.?
				// all 'org.jfrog:shared:1.?:*@*', key2: 'val2', key3: 'val3'
			}

			publishBuildInfo = true
			publishArtifacts = true
			publishPom = true
		}
	}

	resolve {
		contextUrl = 'http://huxley:8081/artifactory/'

		repository {
			repoKey = 'jcenter'
			maven = true
		}

		repository {
			repoKey = 'libs-release'
			maven = true
		}
	}

	// Redefine basic properties of the build info object
	clientConfig.setIncludeEnvVars(true)
	clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())
	clientConfig.info.setBuildName('new-strange-name')
	clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
}

dependencies {
	// The production code uses the SLF4J logging API at compile time
	compile 'org.slf4j:slf4j-api:1.7.12'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
}

sourceSets {
    main.java.srcDirs += System.getenv('RDSJAVAGIT')+"/shared-source/JLib/"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifactId = 'jlib-jdk-1-8'
		}
	}
}
