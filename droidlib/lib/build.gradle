apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'com.denizensoft.droidlib'
version = '1.0.0-SNAPSHOT'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.1"

	defaultConfig {
		minSdkVersion 17
		targetSdkVersion 23
		versionCode 1
		versionName = version
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	android {
		lintOptions {
			abortOnError false
		}
	}

	lintOptions {
		disable 'TrulyRandom','SetJavaScriptEnabled'
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])

	// Android ...
	//
	compile(group: 'com.android.support', name: 'appcompat-v7', version: '23.1.1')

	// Java ...
	//
	compile(group: 'org.mozilla', name: 'rhino', version: '1.7R5')
	compile(group: 'org.apache.commons', name: 'commons-lang3', version: '3.4')


	compile(group: 'com.denizensoft.jlib', name: 'jlib-1-7', version: '1.0.0-SNAPSHOT', changing: true)
}

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task libJavaDoc(type: Javadoc) {
	doFirst {
		println "Source dirs: ${android.sourceSets.main.java.srcDirs}"
	}
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: libJavaDoc) {
	classifier = 'javadoc'
	from libJavaDoc.destinationDir
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId 'droidlib-v17'
			artifacts = [bundleRelease, sourcesJar]
		}
	}
}

artifactory {

	contextUrl = "${artifactory_contextUrl}"

	publish {

		repository {
			repoKey = version.endsWith('-SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
		}

		defaults {
			// This closure defines defaults for all 'artifactoryPublish' tasks of all projects the plugin is applied to
			// Optional list of publications (names or objects) to publish.
			//
			publications('mavenJava')

			// properties = ['qa.level': 'basic', 'q.os': 'win32, deb, osx']  //Optional map of properties to attach to all published artifacts
			/*
				The properties closure in the "defaults" task uses the following syntax:
				properties {
					publicationName 'group:module:version:classifier@type', key1:'value1', key2:'value2', ...
				}
				publicationName: A valid name for a publication of the project. You can use all to apply the properties to all publications.
				group:module:version:classifier@type: A filter that specifies the artifacts to which properties should be attached. 
				The filter may contain wildcards: * for all characters or ? for a single character.
				key:'value': A list of key/value properties that will be attached to to the published artifacts matching the filter. 
			*/
			properties {
				//Optional closure to attach properties to artifacts based on a list of artifact patterns per project publication
				mavenJava '*:*:*:*@*', platform: 'dalvik'

				//The property platform=linux,win64 will be set on all artifacts in foo publication
				//The property key1=val1 will be set on all artifacts part of the mavenJava publication and with group org.jfrog
				//mavenJava 'org.jfrog:*:*:*@*', key1: 'val1'

				//The properties key2 and key3 will be set on all published artifacts (all publications) with group:artifact:version 
				//equal to org.jfrog:shared:1.?
				// all 'org.jfrog:shared:1.?:*@*', key2: 'val2', key3: 'val3'
			}

			publishPom = true
			publishBuildInfo = true
			publishArtifacts = true
		}
	}

	resolve {
		repository {
			repoKey = 'libs-snapshot'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
		}

		repository {
			repoKey = 'libs-release'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
		}

		repository {
			repoKey = 'jcenter'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
		}
	}

	// Redefine basic properties of the build info object
	clientConfig.setIncludeEnvVars(true)
	clientConfig.info.addEnvironmentProperty('test.adding.dynVar', new java.util.Date().toString())
	clientConfig.info.setBuildName('DroidLib-v17')
	clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
}
